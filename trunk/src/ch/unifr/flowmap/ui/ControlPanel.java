/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ControlPanel.java
 *
 * Created on 15-Sep-2009, 14:46:54
 */

package ch.unifr.flowmap.ui;

import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;

import ch.unifr.flowmap.data.Stats;

/**
 *
 * @author boyandii
 */
public class ControlPanel extends javax.swing.JPanel {
    
    private final FlowMapCanvas flowMapCanvas;

    /** Creates new form ControlPanel */
    public ControlPanel(FlowMapCanvas flowMapCanvas) {
        this.flowMapCanvas = flowMapCanvas;
        initComponents();
    }

    private SpinnerModel createMinValueFilterSpinnerModel() {
        Stats stats = flowMapCanvas.getGraphStats().getValueEdgeAttrStats();
        return new SpinnerNumberModel(
                flowMapCanvas.getValueFilterMin(), stats.min, stats.max, 1);
    }

    private SpinnerModel createMaxValueFilterSpinnerModel() {
        Stats stats = flowMapCanvas.getGraphStats().getValueEdgeAttrStats();
        return new SpinnerNumberModel(
                flowMapCanvas.getValueFilterMax(), stats.min, stats.max, 1);
    }

    private double fromLogValueFilter(final int v) {
        double value = Math.round(Math.pow(Math.E, v));
        final Stats stats = flowMapCanvas.getGraphStats().getValueEdgeAttrStats();
        if (value < stats.min) {
            value = stats.min;
        }
        if (value > stats.max) {
            value = stats.max;
        }
        return value;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jCheckBox1 = new javax.swing.JCheckBox();
        jSlider1 = new javax.swing.JSlider();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jSlider3 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        autoAdjustColorScaleChk = new javax.swing.JCheckBox();
        maxValueFilterSpinner = new javax.swing.JSpinner();
        minValueFilterSpinner = new javax.swing.JSpinner();
        maxValueFilterSlider = new javax.swing.JSlider();
        minValueFilterSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        maxEdgeWidthSpinner = new javax.swing.JSpinner();
        edgeOpacitySpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        edgeMarkerOpacitySpinner = new javax.swing.JSpinner();
        maxEdgeWidthSlider = new javax.swing.JSlider();
        edgeMarkerOpacitySlider = new javax.swing.JSlider();
        edgeOpacitySlider = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        jLabel8.setText("Min length:");

        jLabel7.setText("Max length:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider3, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(16, 16, 16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        autoAdjustColorScaleChk.setSelected(flowMapCanvas.getAutoAdjustEdgeColorScale());
        autoAdjustColorScaleChk.setText("Auto adjust color scale");
        autoAdjustColorScaleChk.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                autoAdjustColorScaleChkStateChanged(evt);
            }
        });

        maxValueFilterSpinner.setModel(createMaxValueFilterSpinnerModel());
        maxValueFilterSpinner.setValue(flowMapCanvas.getValueFilterMax());

        minValueFilterSpinner.setModel(createMinValueFilterSpinnerModel());
        minValueFilterSpinner.setValue(flowMapCanvas.getValueFilterMin());
        minValueFilterSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minValueFilterSpinnerStateChanged(evt);
            }
        });

        maxValueFilterSlider.setMaximum((int)Math.round(flowMapCanvas.getGraphStats().getValueEdgeAttrStats().maxLog));
        maxValueFilterSlider.setMinimum((int)Math.round(flowMapCanvas.getGraphStats().getValueEdgeAttrStats().minLog));
        maxValueFilterSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxValueFilterSliderStateChanged(evt);
            }
        });

        minValueFilterSlider.setMaximum((int)Math.round(flowMapCanvas.getGraphStats().getValueEdgeAttrStats().maxLog));
        minValueFilterSlider.setMinimum((int)Math.round(flowMapCanvas.getGraphStats().getValueEdgeAttrStats().minLog));
        minValueFilterSlider.setValue((int)Math.round(Math.log(flowMapCanvas.getValueFilterMin())));
        minValueFilterSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minValueFilterSliderStateChanged(evt);
            }
        });

        jLabel4.setText("Max value:");

        jLabel2.setText("Min value:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(autoAdjustColorScaleChk)
                    .addComponent(maxValueFilterSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(minValueFilterSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxValueFilterSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(minValueFilterSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minValueFilterSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(minValueFilterSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(autoAdjustColorScaleChk, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxValueFilterSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(maxValueFilterSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addGap(32, 32, 32))))
        );

        jLabel5.setText("Edge opacity:");

        maxEdgeWidthSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        maxEdgeWidthSpinner.setValue((int)flowMapCanvas.getMaxEdgeWidth());
        maxEdgeWidthSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxEdgeWidthSpinnerStateChanged(evt);
            }
        });

        edgeOpacitySpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));
        edgeOpacitySpinner.setValue(flowMapCanvas.getEdgeAlpha());
        edgeOpacitySpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                edgeOpacitySpinnerStateChanged(evt);
            }
        });

        jLabel1.setText("Edge width:");

        edgeMarkerOpacitySpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));
        edgeMarkerOpacitySpinner.setOpaque(false);
        edgeMarkerOpacitySpinner.setValue(flowMapCanvas.getEdgeMarkerAlpha());
        edgeMarkerOpacitySpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                edgeMarkerOpacitySpinnerStateChanged(evt);
            }
        });

        maxEdgeWidthSlider.setMinimum(1);
        maxEdgeWidthSlider.setValue((int)flowMapCanvas.getMaxEdgeWidth());
        maxEdgeWidthSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxEdgeWidthSliderStateChanged(evt);
            }
        });

        edgeMarkerOpacitySlider.setMaximum(255);
        edgeMarkerOpacitySlider.setValue(flowMapCanvas.getEdgeMarkerAlpha());
        edgeMarkerOpacitySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                edgeMarkerOpacitySliderStateChanged(evt);
            }
        });

        edgeOpacitySlider.setMaximum(255);
        edgeOpacitySlider.setValue(flowMapCanvas.getEdgeAlpha());
        edgeOpacitySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                edgeOpacitySliderStateChanged(evt);
            }
        });

        jLabel6.setText("Edge marker opacity:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edgeOpacitySlider, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(edgeMarkerOpacitySlider, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(maxEdgeWidthSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edgeOpacitySpinner)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(edgeMarkerOpacitySpinner)
                        .addComponent(maxEdgeWidthSpinner)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxEdgeWidthSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                            .addComponent(jLabel1))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(maxEdgeWidthSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(edgeMarkerOpacitySlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edgeOpacitySpinner))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edgeMarkerOpacitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(edgeOpacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    private void edgeOpacitySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_edgeOpacitySliderStateChanged
        flowMapCanvas.setEdgeAlpha(edgeOpacitySlider.getValue());
        edgeOpacitySpinner.setValue(edgeOpacitySlider.getValue());
    }//GEN-LAST:event_edgeOpacitySliderStateChanged

    private void edgeMarkerOpacitySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_edgeMarkerOpacitySliderStateChanged
        flowMapCanvas.setEdgeMarkerAlpha(edgeMarkerOpacitySlider.getValue());
        edgeMarkerOpacitySpinner.setValue(edgeMarkerOpacitySlider.getValue());
    }//GEN-LAST:event_edgeMarkerOpacitySliderStateChanged

    private void edgeMarkerOpacitySpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_edgeMarkerOpacitySpinnerStateChanged
        edgeMarkerOpacitySlider.setValue((Integer)edgeMarkerOpacitySpinner.getValue());
    }//GEN-LAST:event_edgeMarkerOpacitySpinnerStateChanged

    private void edgeOpacitySpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_edgeOpacitySpinnerStateChanged
        edgeOpacitySlider.setValue((Integer)edgeOpacitySpinner.getValue());
    }//GEN-LAST:event_edgeOpacitySpinnerStateChanged

    private void minValueFilterSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minValueFilterSpinnerStateChanged
        minValueFilterSlider.setValue((int)Math.round(Math.log((Double)minValueFilterSpinner.getValue())));
    }//GEN-LAST:event_minValueFilterSpinnerStateChanged

    private void minValueFilterSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minValueFilterSliderStateChanged
        double value = fromLogValueFilter(minValueFilterSlider.getValue());
        flowMapCanvas.setValueFilterMin(value);
        minValueFilterSpinner.setValue(value);
    }//GEN-LAST:event_minValueFilterSliderStateChanged

    private void maxValueFilterSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxValueFilterSliderStateChanged
        double value = fromLogValueFilter(maxValueFilterSlider.getValue());
        flowMapCanvas.setValueFilterMax(value);
        maxValueFilterSpinner.setValue(value);
    }//GEN-LAST:event_maxValueFilterSliderStateChanged

    private void autoAdjustColorScaleChkStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_autoAdjustColorScaleChkStateChanged
        flowMapCanvas.setAutoAdjustEdgeColorScale(autoAdjustColorScaleChk.isSelected());
    }//GEN-LAST:event_autoAdjustColorScaleChkStateChanged

    private void maxEdgeWidthSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxEdgeWidthSliderStateChanged
        flowMapCanvas.setMaxEdgeWidth(maxEdgeWidthSlider.getValue());
        maxEdgeWidthSpinner.setValue(maxEdgeWidthSlider.getValue());
    }//GEN-LAST:event_maxEdgeWidthSliderStateChanged

    private void maxEdgeWidthSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxEdgeWidthSpinnerStateChanged
        maxEdgeWidthSlider.setValue((Integer)maxEdgeWidthSpinner.getValue());
    }//GEN-LAST:event_maxEdgeWidthSpinnerStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoAdjustColorScaleChk;
    private javax.swing.JSlider edgeMarkerOpacitySlider;
    private javax.swing.JSpinner edgeMarkerOpacitySpinner;
    private javax.swing.JSlider edgeOpacitySlider;
    private javax.swing.JSpinner edgeOpacitySpinner;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JSlider maxEdgeWidthSlider;
    private javax.swing.JSpinner maxEdgeWidthSpinner;
    private javax.swing.JSlider maxValueFilterSlider;
    private javax.swing.JSpinner maxValueFilterSpinner;
    private javax.swing.JSlider minValueFilterSlider;
    private javax.swing.JSpinner minValueFilterSpinner;
    // End of variables declaration//GEN-END:variables

}
